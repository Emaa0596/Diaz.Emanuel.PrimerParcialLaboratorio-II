<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>