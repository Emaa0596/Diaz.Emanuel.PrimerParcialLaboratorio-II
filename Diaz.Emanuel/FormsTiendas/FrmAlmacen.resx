<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>