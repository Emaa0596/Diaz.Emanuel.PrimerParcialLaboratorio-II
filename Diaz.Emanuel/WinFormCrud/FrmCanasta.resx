<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wUEJBxE4MAeMgAAAABJRU5ErkJggg==
</value>
  </data>
</root>